#!/usr/local/sbin/mxk -dzp
#
# -p is needed to specify the script file
# -z disables interactive console
# -d backgrounds

echo chords: chording keyboard.

# List the available input devices

echo chords: Available sources:
list-sources

# Find an input device which has keys, but no relative or absolute motion,
# we assume that this is a keyboard, this may not work everywhere
# Alternative
#caps-source 0 key !relative !absolute
# Alternative: if you know that the keyboard is always at event2
#file-source 0 /dev/input/event2
# Alternative: if you know that the keyboard contains the substring eyboard
name-source 0 eyboard
norepeat-source 0
echo chords: Selected source:
used-sources

# First filter out the keys which should never autorepeat, all others will
start-sorter 0 0
match-sorter 0 leftcontrol 1
match-sorter 0 rightcontrol 1
match-sorter 0 leftshift 1
match-sorter 0 rightshift 1
match-sorter 0 leftalt 1
match-sorter 0 rightalt 1
connect-node source sorter

# set up a mode switch, controlled by the caps lock key
start-branch 0
key-branch 0 insert toggle
default-branch 0 pass
# have all autorepeat keys go here
bin-sorter 0 0
connect-node sorter:0 branch:0

# flash caps lock if in the up mode
#load-pattern hjkl on:caps wait:500 off:caps wait:500 repeat
#light-branch 0 hjkl

start-chord 0

# using new-set-chord does not depend on press order


# second diagram
gap-set-chord 0 u d w
gap-set-chord 0 d d s
gap-set-chord 0 c d x

gap-set-chord 0 w d q
gap-set-chord 0 l d a
gap-set-chord 0 f d z

gap-set-chord 0 y d tab
gap-set-chord 0 m d capslock
gap-set-chord 0 g d v

# second diagram betweeners
gap-set-chord 0 v d w q
gap-set-chord 0 p d s a
gap-set-chord 0 b d x z

gap-set-chord 0 x d q tab
gap-set-chord 0 k d a capslock
gap-set-chord 0 j d z v

gap-set-chord 0 z d w tab
gap-set-chord 0 q d s capslock

# third diagram
gap-set-chord 0 3 c w
gap-set-chord 0 2 c s
gap-set-chord 0 1 c x

gap-set-chord 0 6 c q
gap-set-chord 0 5 c a
gap-set-chord 0 4 c z

gap-set-chord 0 y c tab
gap-set-chord 0 m c capslock
gap-set-chord 0 g c v

# first diagram - define single-character chords last
gap-set-chord 0 tab e
gap-set-chord 0 space d
gap-set-chord 0 backspace c

gap-set-chord 0 o w
gap-set-chord 0 e s
gap-set-chord 0 i x

gap-set-chord 0 r q
gap-set-chord 0 t a
gap-set-chord 0 n z

gap-set-chord 0 s tab
gap-set-chord 0 h capslock
gap-set-chord 0 a v

# connect up branch of mode switch to array rewriter
up-branch 0
connect-node branch:0 chord:0

# need to do our own repeater, delays for 300ms then repeats every 35ms
# this is quite fast
start-repeater 0 300 35
# alternative, somewhat slower repeats
# start-repeater 0 600 100

# make things adjustable, using keypad + and -
adjust-repeater 0 20 kpminus kpplus
echo chords: adjust repeat spead with keypad plus and minus

# connect plain (down) path
down-branch 0
connect-node branch:0 repeater:0
# connect rewritten (up) path
connect-node chord:0 repeater:0

# output
start-target

# connect all nonrepeating nodes to target
bin-sorter 0 1
connect-node sorter:0 target:0

# connect repeater to target
connect-node repeater:0 target:0

lock-source 0

echo chords: setup complete
echo chords: hit insert to use nostromo as chording keyboard
